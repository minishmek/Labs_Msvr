

// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec2 vertexTexture;
uniform mat4 ModelViewProjectionMatrix;
uniform mat4 ModelViewMatrix, ProjectionMatrix;
varying vec2 v_texcoord;
uniform float b;

void main() {
    v_texcoord = vec2(vertexTexture.x,vertexTexture.y);
    vec4 vert = ModelViewMatrix * vec4(vertex,1.0);
    gl_Position = ProjectionMatrix * vert;
    if(b>0.0){
        gl_Position = ModelViewProjectionMatrix * vec4(vertex,1.0);
    }
}`;

// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

varying vec2 v_texcoord;
uniform sampler2D tmu;

void main() {
    vec4 texColor = texture2D(tmu, v_texcoord);
    gl_FragColor = texColor;
}`;